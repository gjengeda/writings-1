Please share a critical piece of advice that is supported by a personal story that would help a capable friend manage the transition to continuous delivery. (300 to 400 words is ideal.)


Your friend has been tasked with transitioning her company's software development efforts to continuous delivery. She's extremely capable, but she's nervous about leading the transition. Please share a story from your own experience that will provide her with a critical piece of advice that will help her to be more successful.

Trust the people doing the actual work
---
Ever since I started working with IT I have made an effort to become friends with everyone I work with. Not only the people on my team, but also on teams that my team somehow depends on. I have gained a lot of friends that way, and I would have thought that being friends with everyone would also make work easier and more effective. 









Years ago I worked on F15 fighter plane avionics simulation.  The environment was very complex and consisted of over 100 application binaries and hardware drivers written in C/C++ and other languages. When I joined the team creating new development and production environments was a very manual and error prone process. Software delivery velocity was negatively impacted due to lack of an easy way to setup a debug environment and certain code changes required many binaries to be recompiled that made the code-test-debug process inconsistent and error prone. 

Prior to this development role, I had worked as a system administrator at a hosting provider. Being a sysadmin taught me a lot about scripting and the environment. As I was lazy and didn’t like doing the same thing twice, I was always focused at building tools that made life much easier for me. More time for breaks! So when I started my role in the avionics role I was immediately frustrated by the lack of productivity and all the manual work I (and everyone else) needed to do in order to be successful. I decided to roll up my sleeves & leverage my automation skills to revamp the whole build and debug environment. 

Not only did I deliver a one click build but with one command you could rebuild the whole environment and install it into production and it’d “just work”. Every developer had full control of their own environment and there was no manual copying & voodoo to get up and running. Getting a whole debug environment up and running was also only one click away. A single code change could find its way into the test environment with one command. Looking back, my development & system administration skills and a bias towards automation is what enabled me to have a big impact on productivity and quality for everyone around me. Now, years later, I realize that I was actually following DevOps practices and implemented a Continuous Delivery process many years before these terms existed. What this tells me is that there’s no excuse not to get it done today with all the different tools and methodology that now exist. This is especially true when I was able to do the same in an era and environment which was at the foundation the antithesis of continuous delivery. All it takes is a strong bias to action, focus on automation and realizing that this is the best way for you to be lazy!